import { TenantId } from "../reusables/Constants";

export const apiRoutes = {
  baseUrl: "http://13.238.73.156:44340",
  login: "/api/auth/Login",
  Customer: "/api/v1/Customer",
  custConnDetails: "/api/v1/Customer/getCustomerConnectionDetail?CusId=",
  getCustMeters: "/api/v1/Customer/getCustomerMeters?CustId=",
  tariff: "/api/v1/Tariff",
  tariffRate: "/api/v1/Tariff/getRate?Id=",
  addTariffRate: "/api/v1/Tariff/addRate",
  getAllMeterReadings: "/api/v1/Customer/getAllMeterReading",
  getReadingSheet: "/api/v1/Customer/getReadingsheet?",
  saveMeterReading: "/api/v1/Customer/saveMeterReading",
  getAllMeters: "/api/v1/Meter",
  billingDetails: "/api/v1/Customer/getCurrentBillingDetails",
  connPayMode: "/api/v1/Customer/connPayMode",
  getLookUps: "/api/v1/Lookup/getLookUps?TenantId=" + TenantId + "&Type=",
  addLookup: "/api/v1/Lookup/addLookup",
  addLookupParent: "/api/v1/Lookup",
  changeLookupStatus: "/api/v1/Lookup/changeLookupStatus?Id=",
  lookup: "/api/v1/Lookup?TenantId=" + TenantId,
  updateLookupParent: "/api/v1/Lookup/update",
  getAllSanityChecks: "/api/v1/Tariff/getAllSanityChecks",
  verifyAuthToken: "/api/auth/Login/VerifyAuthToken?",
  meterHistory: "/api/v1/Customer/customerMeterHistory?CusId=",
  updateLookup: "/api/v1/Lookup/updateLookup",
  meterStatus: "/api/v1/Meter/meterStatus",
  getSpareMetersNew: "/api/v1/Customer/getSpareMetersNew",
  getConnPhMtrPh: "/api/v1/Customer/getConnPhMtrPh",
  addConnPhMtrPh: "/api/v1/Customer/addConnPhMtrPh",
  addCustConnDetails: "/api/v1/Customer/addCustomerConnDetail",
  getConnDetailsAll: "/api/v1/Customer/getConnDetailsAll",
  processNames: "/api/v1/Process/processNames",
  processGroups: "/api/v1/Process/processGroups",
  processGroupsActive: "/api/v1/Process/processGroupsActive",
  processTypes: "/api/v1/Process/processTypes",
  processes: "/api/v1/Process/processes",
  processEvents: "/api/v1/Process/processEvents",
  processEventsReferences: "/api/v1/Process/processEventsReferences",
  processImpacts: "/api/v1/Process/processImpacts",
  processImpactByGrpId:
    "/api/v1/Process/processImpactsByGroupId?ProcessGroupId=",
  processTypesByImpactId:
    "/api/v1/Process/processTypesByImpactId?ProcessImpactId=",
  processEventsByProcessNameId:
    "/api/v1/Process/processEventsByProcessNameId?ProcessNameId=",
  processNamesByTypeId: "/api/v1/Process/processNamesByTypeId?ProcessTypeId=",
  processRegions: "/api/v1/ProcessWorkgroups/processRegions",
  processDepots: "/api/v1/ProcessWorkgroups/processDepots",
  processWorkgroups: "/api/v1/ProcessWorkgroups/processWorkgroups",
  processRoles: "/api/v1/ProcessWorkgroups/processRoles",
  processWorkers: "/api/v1/ProcessWorkgroups/processWorkers",
  processNames: "/api/v1/Process/processNames",
  processGroupById: "/api/v1/Process/processGroupsById?GroupId=",
  processImpactsById: "/api/v1/Process/processImpactsById?ProcessImpactsId=",
  processTypesById: "/api/v1/Process/processTypesById?ProcessTypeId=",
  processNamesById: "/api/v1/Process/processNamesById?ProcessNameId=",
  processEventsById: "/api/v1/Process/processEventsById?processEventsId=",
  processEventsReference: "/api/v1/Process/processEventsReference",
  locations: "/api/v1/ProcessWorkgroups/getAllLocations",
  users: "/api/v1/ProcessWorkgroups/getAllUsers",
  processRolesIsActive: "/api/v1/ProcessWorkgroups/processRolesIsActive",
  processDepotsByRegionId:
    "/api/v1/ProcessWorkgroups/processDepotsByRegionId?RegionId=",
  processTimeunits: "/api/v1/Process/processTimeunits",
  processZones: "/api/v1/Process/processZones",
  processZoneMatrix: "/api/v1/Process/processZoneMatrix",
  tenants: "/api/v1/Tenant",
  tenantsUpdate: "/api/v1/Tenant/update",
  getTenantById: "/api/v1/Tenant/getTenantById?TenantId=",
  hubs: `/api/v1/Hub?TenantId=`,
  hubUpdate: "/api/v1/Hub/update",
  tenantHubs: `/api/v1/Tenant/getTenantHubs?TenantId=${TenantId}`,
  tenanthubusers: "/api/v1/Tenant/getTenantHubUsers?",
  getRolesBelongToHub: "/api/v1/UsersAndRoles/getRolesBelongToHub?",
  createUser: "/api/v1/UsersAndRoles/createUser",
  meterVendors: "/api/v1/Meter/meterVendors",
  meterManufacturers: "/api/v1/Meter/meterManufacturers",
  meterModels: "/api/v1/Meter/meterModels",
  meterVendorModelsMapping: "/api/v1/Meter/meterVendorModelsMapping",
  meterVendorEvents: "/api/v1/Meter/meterVendorEvents",
  addMetersFromFile: "/api/v1/Meter/addMetersFromFile",
  uploadTenantLogo: "/api/v1/Tenant/logo?TenantId=",
  colorList: `/api/v1/Lookup/getLookUps?TenantId=${TenantId}&Type=12`,
  permissionGroup: "/api/v1/Permissions/permissionAllGroup?TenantId=",
  permissions: "/api/v1/Permissions?TenantId=",
  modules: "/api/v1/Permissions/getAllModules",
  modulePermissions: "/api/v1/Permissions/allModulePerm?ModuleId=",
};
